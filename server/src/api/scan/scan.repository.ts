/* 
  -- DO NOT EDIT THIS FILE
*/

import scansJson from '../../db/scans.json';
import { FindAllParams, Scan } from './types';

const scansData: Scan[] = scansJson.map(
  ({
    date,
    ...rest
  }: {
    id: string;
    date: string;
    cloudProviderId: string;
    scanSize: number;
    scanPrivateKey: string;
  }) => ({
    ...rest,
    date: new Date(date),
  })
);

export class ScanRepository {
  /**
   * Find all the scans
   * @param params
   * @param params.filterCallback filter all the scans that filterCallback returns true on them
   * @returns Scan[]
   */
  static findAll(params?: FindAllParams): Promise<Scan[]> {
    // console.log('findAll');
    const filterCallback = params?.filterCallback;

    const filteredScans = !filterCallback
      ? scansData
      : scansData.filter(filterCallback);

      // console.log('findAll222');
      // console.log(filteredScans);
      
    
    // return new Promise((res) => {
    //   setTimeout(() => {
    //     res(filteredScans);
    //     console.log('setTimeout');
    //   }, filteredScans.length / 5);
    // });


    return new Promise((res) => {
      res(filteredScans);
      // setTimeout(() => {
      //   console.log('setTimeout');
      // }, filteredScans.length / 5);
    });
  }

}
